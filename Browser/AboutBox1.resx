<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cG9HAAAAAElFTkSuQmCC
</value>
  </data>
</root>